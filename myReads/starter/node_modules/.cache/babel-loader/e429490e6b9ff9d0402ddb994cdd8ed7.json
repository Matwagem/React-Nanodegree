{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mattw\\\\Documents\\\\GitHub\\\\React-Nanodegree\\\\myReads\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Search from \"./Search\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport ListBooks from \"./ListBooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const options = [{\n    value: 'currentlyReading',\n    label: 'Currently Reading'\n  }, {\n    value: 'read',\n    label: 'Read'\n  }, {\n    value: 'wantToRead',\n    label: 'Want To Read'\n  }, {\n    value: 'none',\n    label: 'None'\n  }];\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res); //Books now contains all books available\n    };\n\n    getBooks();\n    console.log(res);\n  }, []); //edit\n\n  const changeBookShelf = (book, shelf) => {\n    BooksAPI.update(book, shelf).then(books => {\n      const updatedBooks = Object.keys(books).map(key => {\n        //if(b.id === book.id){\n        //  b.shelf = shelf;\n        //}\n        console.log(key);\n        console.log(books[key]);\n      }); //setBooks(updatedBooks);\n\n      console.log(books);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(ListBooks, {\n        books: books,\n        options: options,\n        changeBookShelf: changeBookShelf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/Search\",\n      element: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mattw/Documents/GitHub/React-Nanodegree/myReads/starter/src/App.js"],"names":["useState","useEffect","BooksAPI","Search","Route","Routes","useNavigate","ListBooks","App","books","setBooks","options","value","label","getBooks","res","getAll","console","log","changeBookShelf","book","shelf","update","then","updatedBooks","Object","keys","map","key"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,WAAvB,QAAyC,kBAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMW,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,kBAAT;AAA6BC,IAAAA,KAAK,EAAE;AAApC,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAHc,EAId;AAAED,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAJc,CAAhB;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,QAAQ,GAAG,YAAY;AACzB,YAAMC,GAAG,GAAG,MAAMb,QAAQ,CAACc,MAAT,EAAlB;AACAN,MAAAA,QAAQ,CAACK,GAAD,CAAR,CAFyB,CAGzB;AACH,KAJD;;AAKAD,IAAAA,QAAQ;AACRG,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACH,GARQ,EAQN,EARM,CAAT,CAXa,CAqBb;;AACA,QAAMI,eAAe,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvCnB,IAAAA,QAAQ,CAACoB,MAAT,CAAgBF,IAAhB,EAAsBC,KAAtB,EAA6BE,IAA7B,CAAkCd,KAAK,IAAI;AAE3C,YAAMe,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYjB,KAAZ,EAAmBkB,GAAnB,CAAuBC,GAAG,IAAI;AACjD;AACA;AACA;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACmB,GAAD,CAAjB;AACD,OANoB,CAArB,CAF2C,CAS3C;;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACD,KAXC;AAWC,GAZH;;AAcA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,IAAI,EAAC,GAAnB;AAAwB,MAAA,OAAO,eAAE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA,KAAlB;AAAyB,QAAA,OAAO,EAAEE,OAAlC;AAA2C,QAAA,eAAe,EAAEQ;AAA5D;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA1CQX,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\"\nimport Search from \"./Search\";\nimport {Route, Routes, useNavigate} from \"react-router-dom\"\nimport ListBooks from \"./ListBooks\";\n\nfunction App() {\n\n  const [books, setBooks] = useState([]);\n\n  const options = [\n    { value: 'currentlyReading', label: 'Currently Reading' },\n    { value: 'read', label: 'Read' },\n    { value: 'wantToRead', label: 'Want To Read' },\n    { value: 'none', label: 'None' }\n  ]\n\n  useEffect(() => {\n      const getBooks = async () => {\n          const res = await BooksAPI.getAll();\n          setBooks(res);\n          //Books now contains all books available\n      }\n      getBooks();\n      console.log(res)\n  }, []);\n\n  //edit\n  const changeBookShelf = (book, shelf) => {\n    BooksAPI.update(book, shelf).then(books => {\n    \n    const updatedBooks = Object.keys(books).map(key => {\n      //if(b.id === book.id){\n      //  b.shelf = shelf;\n      //}\n      console.log(key);\n      console.log(books[key]);\n    })\n    //setBooks(updatedBooks);\n    console.log(books);\n  })};\n\n  return (\n    <Routes>\n      <Route  exact path=\"/\"  element={<ListBooks books={books} options={options} changeBookShelf={changeBookShelf}/>}/>\n      <Route path=\"/Search\" element={<Search/>}/>\n    </Routes>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}